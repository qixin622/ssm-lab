<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.lab.dao.CourseItemMapper">
  <resultMap id="BaseResultMap" type="com.ssm.lab.bean.CourseItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="itemname" jdbcType="VARCHAR" property="itemname" />
    <result column="expdemand" jdbcType="VARCHAR" property="expdemand" />
    <result column="expperiod" jdbcType="TINYINT" property="expperiod" />
    <result column="exptype" jdbcType="VARCHAR" property="exptype" />
    <association property="course" column="cid" javaType="com.ssm.lab.bean.Course">
      <result column="cno" property="cno" javaType="String" />
      <result property="cname" column="cname" javaType="String"/>
    </association>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ssm.lab.bean.CourseItem">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cid, itemname, expdemand, expperiod, exptype
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ssm.lab.bean.CourseItemExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_courseitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ssm.lab.bean.CourseItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_courseitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    ci.id, cid, itemname, expdemand, ci.expperiod, exptype, ci.content, cno,cname
    from tb_courseitem ci left join tb_course c on ci.cid=c.id
    where ci.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_courseitem
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.lab.bean.CourseItemExample">
    delete from tb_courseitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.lab.bean.CourseItem">
    insert into tb_courseitem (id, cid, itemname, 
      expdemand, expperiod, exptype, 
      content)
    values (#{id,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{itemname,jdbcType=VARCHAR}, 
      #{expdemand,jdbcType=VARCHAR}, #{expperiod,jdbcType=TINYINT}, #{exptype,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.lab.bean.CourseItem">
    insert into tb_courseitem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="itemname != null">
        itemname,
      </if>
      <if test="expdemand != null">
        expdemand,
      </if>
      <if test="expperiod != null">
        expperiod,
      </if>
      <if test="exptype != null">
        exptype,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="itemname != null">
        #{itemname,jdbcType=VARCHAR},
      </if>
      <if test="expdemand != null">
        #{expdemand,jdbcType=VARCHAR},
      </if>
      <if test="expperiod != null">
        #{expperiod,jdbcType=TINYINT},
      </if>
      <if test="exptype != null">
        #{exptype,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.lab.bean.CourseItemExample" resultType="java.lang.Long">
    select count(*) from tb_courseitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_courseitem
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.itemname != null">
        itemname = #{record.itemname,jdbcType=VARCHAR},
      </if>
      <if test="record.expdemand != null">
        expdemand = #{record.expdemand,jdbcType=VARCHAR},
      </if>
      <if test="record.expperiod != null">
        expperiod = #{record.expperiod,jdbcType=TINYINT},
      </if>
      <if test="record.exptype != null">
        exptype = #{record.exptype,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_courseitem
    set id = #{record.id,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      itemname = #{record.itemname,jdbcType=VARCHAR},
      expdemand = #{record.expdemand,jdbcType=VARCHAR},
      expperiod = #{record.expperiod,jdbcType=TINYINT},
      exptype = #{record.exptype,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_courseitem
    set id = #{record.id,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      itemname = #{record.itemname,jdbcType=VARCHAR},
      expdemand = #{record.expdemand,jdbcType=VARCHAR},
      expperiod = #{record.expperiod,jdbcType=TINYINT},
      exptype = #{record.exptype,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.lab.bean.CourseItem">
    update tb_courseitem
    <set>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="itemname != null">
        itemname = #{itemname,jdbcType=VARCHAR},
      </if>
      <if test="expdemand != null">
        expdemand = #{expdemand,jdbcType=VARCHAR},
      </if>
      <if test="expperiod != null">
        expperiod = #{expperiod,jdbcType=TINYINT},
      </if>
      <if test="exptype != null">
        exptype = #{exptype,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ssm.lab.bean.CourseItem">
    update tb_courseitem
    set cid = #{cid,jdbcType=INTEGER},
      itemname = #{itemname,jdbcType=VARCHAR},
      expdemand = #{expdemand,jdbcType=VARCHAR},
      expperiod = #{expperiod,jdbcType=TINYINT},
      exptype = #{exptype,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.lab.bean.CourseItem">
    update tb_courseitem
    set cid = #{cid,jdbcType=INTEGER},
      itemname = #{itemname,jdbcType=VARCHAR},
      expdemand = #{expdemand,jdbcType=VARCHAR},
      expperiod = #{expperiod,jdbcType=TINYINT},
      exptype = #{exptype,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectCourseItemsByCid" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_courseitem
    where cid=#{cid}
  </select>
</mapper>