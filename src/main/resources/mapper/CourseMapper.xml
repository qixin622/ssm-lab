<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.lab.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="com.ssm.lab.bean.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cno" jdbcType="VARCHAR" property="cno" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="property" jdbcType="VARCHAR" property="property" />
    <result column="precourse" jdbcType="VARCHAR" property="precourse" />
    <result column="totalperiod" jdbcType="TINYINT" property="totalperiod" />
    <result column="credit" jdbcType="REAL" property="credit" />
    <result column="theperiod" jdbcType="TINYINT" property="theperiod" />
    <result column="expperiod" jdbcType="TINYINT" property="expperiod" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="specialty" jdbcType="VARCHAR" property="specialty" />
    <result column="dlurl" jdbcType="VARCHAR" property="dlurl" />
    <result column="bookurl" jdbcType="VARCHAR" property="bookurl" />
    <collection property="courseItems" javaType="ArrayList" column="id" ofType="com.ssm.lab.bean.CourseItem"
                select="com.ssm.lab.dao.CourseItemMapper.selectCourseItemsByCid"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ssm.lab.bean.Course">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cno, cname, property, precourse, totalperiod, credit, theperiod, expperiod, level, 
    specialty, dlurl, bookurl
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ssm.lab.bean.CourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ssm.lab.bean.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.lab.bean.CourseExample">
    delete from tb_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.lab.bean.Course">
    insert into tb_course (id, cno, cname, 
      property, precourse, totalperiod, 
      credit, theperiod, expperiod, 
      level, specialty, dlurl, 
      bookurl, content)
    values (#{id,jdbcType=INTEGER}, #{cno,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, 
      #{property,jdbcType=VARCHAR}, #{precourse,jdbcType=VARCHAR}, #{totalperiod,jdbcType=TINYINT}, 
      #{credit,jdbcType=REAL}, #{theperiod,jdbcType=TINYINT}, #{expperiod,jdbcType=TINYINT}, 
      #{level,jdbcType=VARCHAR}, #{specialty,jdbcType=VARCHAR}, #{dlurl,jdbcType=VARCHAR}, 
      #{bookurl,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.lab.bean.Course">
    insert into tb_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cno != null">
        cno,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="property != null">
        property,
      </if>
      <if test="precourse != null">
        precourse,
      </if>
      <if test="totalperiod != null">
        totalperiod,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="theperiod != null">
        theperiod,
      </if>
      <if test="expperiod != null">
        expperiod,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="specialty != null">
        specialty,
      </if>
      <if test="dlurl != null">
        dlurl,
      </if>
      <if test="bookurl != null">
        bookurl,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cno != null">
        #{cno,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="property != null">
        #{property,jdbcType=VARCHAR},
      </if>
      <if test="precourse != null">
        #{precourse,jdbcType=VARCHAR},
      </if>
      <if test="totalperiod != null">
        #{totalperiod,jdbcType=TINYINT},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=REAL},
      </if>
      <if test="theperiod != null">
        #{theperiod,jdbcType=TINYINT},
      </if>
      <if test="expperiod != null">
        #{expperiod,jdbcType=TINYINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null">
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="dlurl != null">
        #{dlurl,jdbcType=VARCHAR},
      </if>
      <if test="bookurl != null">
        #{bookurl,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.lab.bean.CourseExample" resultType="java.lang.Long">
    select count(*) from tb_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cno != null">
        cno = #{record.cno,jdbcType=VARCHAR},
      </if>
      <if test="record.cname != null">
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.property != null">
        property = #{record.property,jdbcType=VARCHAR},
      </if>
      <if test="record.precourse != null">
        precourse = #{record.precourse,jdbcType=VARCHAR},
      </if>
      <if test="record.totalperiod != null">
        totalperiod = #{record.totalperiod,jdbcType=TINYINT},
      </if>
      <if test="record.credit != null">
        credit = #{record.credit,jdbcType=REAL},
      </if>
      <if test="record.theperiod != null">
        theperiod = #{record.theperiod,jdbcType=TINYINT},
      </if>
      <if test="record.expperiod != null">
        expperiod = #{record.expperiod,jdbcType=TINYINT},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.specialty != null">
        specialty = #{record.specialty,jdbcType=VARCHAR},
      </if>
      <if test="record.dlurl != null">
        dlurl = #{record.dlurl,jdbcType=VARCHAR},
      </if>
      <if test="record.bookurl != null">
        bookurl = #{record.bookurl,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_course
    set id = #{record.id,jdbcType=INTEGER},
      cno = #{record.cno,jdbcType=VARCHAR},
      cname = #{record.cname,jdbcType=VARCHAR},
      property = #{record.property,jdbcType=VARCHAR},
      precourse = #{record.precourse,jdbcType=VARCHAR},
      totalperiod = #{record.totalperiod,jdbcType=TINYINT},
      credit = #{record.credit,jdbcType=REAL},
      theperiod = #{record.theperiod,jdbcType=TINYINT},
      expperiod = #{record.expperiod,jdbcType=TINYINT},
      level = #{record.level,jdbcType=VARCHAR},
      specialty = #{record.specialty,jdbcType=VARCHAR},
      dlurl = #{record.dlurl,jdbcType=VARCHAR},
      bookurl = #{record.bookurl,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_course
    set id = #{record.id,jdbcType=INTEGER},
      cno = #{record.cno,jdbcType=VARCHAR},
      cname = #{record.cname,jdbcType=VARCHAR},
      property = #{record.property,jdbcType=VARCHAR},
      precourse = #{record.precourse,jdbcType=VARCHAR},
      totalperiod = #{record.totalperiod,jdbcType=TINYINT},
      credit = #{record.credit,jdbcType=REAL},
      theperiod = #{record.theperiod,jdbcType=TINYINT},
      expperiod = #{record.expperiod,jdbcType=TINYINT},
      level = #{record.level,jdbcType=VARCHAR},
      specialty = #{record.specialty,jdbcType=VARCHAR},
      dlurl = #{record.dlurl,jdbcType=VARCHAR},
      bookurl = #{record.bookurl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.lab.bean.Course">
    update tb_course
    <set>
      <if test="cno != null">
        cno = #{cno,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="property != null">
        property = #{property,jdbcType=VARCHAR},
      </if>
      <if test="precourse != null">
        precourse = #{precourse,jdbcType=VARCHAR},
      </if>
      <if test="totalperiod != null">
        totalperiod = #{totalperiod,jdbcType=TINYINT},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=REAL},
      </if>
      <if test="theperiod != null">
        theperiod = #{theperiod,jdbcType=TINYINT},
      </if>
      <if test="expperiod != null">
        expperiod = #{expperiod,jdbcType=TINYINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null">
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="dlurl != null">
        dlurl = #{dlurl,jdbcType=VARCHAR},
      </if>
      <if test="bookurl != null">
        bookurl = #{bookurl,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ssm.lab.bean.Course">
    update tb_course
    set cno = #{cno,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      property = #{property,jdbcType=VARCHAR},
      precourse = #{precourse,jdbcType=VARCHAR},
      totalperiod = #{totalperiod,jdbcType=TINYINT},
      credit = #{credit,jdbcType=REAL},
      theperiod = #{theperiod,jdbcType=TINYINT},
      expperiod = #{expperiod,jdbcType=TINYINT},
      level = #{level,jdbcType=VARCHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      dlurl = #{dlurl,jdbcType=VARCHAR},
      bookurl = #{bookurl,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.lab.bean.Course">
    update tb_course
    set cno = #{cno,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      property = #{property,jdbcType=VARCHAR},
      precourse = #{precourse,jdbcType=VARCHAR},
      totalperiod = #{totalperiod,jdbcType=TINYINT},
      credit = #{credit,jdbcType=REAL},
      theperiod = #{theperiod,jdbcType=TINYINT},
      expperiod = #{expperiod,jdbcType=TINYINT},
      level = #{level,jdbcType=VARCHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      dlurl = #{dlurl,jdbcType=VARCHAR},
      bookurl = #{bookurl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByType" parameterType="java.lang.String" resultMap="BaseResultMap">
    select distinct
    <include refid="Base_Column_List" />
    from tb_course
    <if test="type != null and keywords != null">
      where ${type} LIKE CONCAT('%',#{keywords},'%')
    </if>
  </select>
</mapper>